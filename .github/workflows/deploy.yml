name: Deploy DeepShield

on:
  push:
    branches: [ main, devin/* ]
  pull_request:
    branches: [ main ]

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          
      - name: Install dependencies
        run: |
          cd deepshield-backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Set up environment variables
        run: |
          cd deepshield-backend
          mkdir -p /tmp/datasets
          echo "MONGODB_URL=${{ secrets.MONGODB_URL }}" > .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "INSTAGRAM_APP_ID=${{ secrets.INSTAGRAM_APP_ID }}" >> .env
          echo "INSTAGRAM_APP_SECRET=${{ secrets.INSTAGRAM_APP_SECRET }}" >> .env
          echo "INSTAGRAM_ACCESS_TOKEN=${{ secrets.INSTAGRAM_ACCESS_TOKEN }}" >> .env
          echo "INSTAGRAM_ACCOUNT_ID=${{ secrets.INSTAGRAM_ACCOUNT_ID }}" >> .env
          echo "DATASET_DIR=/tmp/datasets" >> .env

      - name: Deploy backend to fly.io
        run: |
          cd deepshield-backend
          curl -X POST https://api.fly.io/v1/apps/app-nvondopb/deploy \
            -H "Authorization: Bearer ${{ secrets.FLY_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"source": "."}'
          
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          cd deepshield-frontend
          npm install
          
      - name: Build
        run: |
          cd deepshield-frontend
          npm run build
          
      - name: Deploy frontend to devinapps
        run: |
          cd deepshield-frontend
          VITE_API_URL=https://app-nvondopb.fly.dev npm run build
          curl -X POST https://api.devinapps.com/v1/deploy \
            -H "Authorization: Bearer ${{ secrets.DEVINAPPS_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"dir": "dist", "url": "https://deepfake-detection-app-hr07qm6j.devinapps.com"}'
